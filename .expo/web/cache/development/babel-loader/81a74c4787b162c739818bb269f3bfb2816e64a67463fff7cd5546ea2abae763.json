{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getAuth, initializeAuth, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport { getReactNativePersistence } from 'firebase/auth/react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\nimport { useEffect, useState } from 'react';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDcVtckd1tAUHiWcIvXIorBN6uOXTWKoDA\",\n  authDomain: \"cardiohardio-6dbc7.firebaseapp.com\",\n  projectId: \"cardiohardio-6dbc7\",\n  storageBucket: \"cardiohardio-6dbc7.appspot.com\",\n  messagingSenderId: \"363762702221\",\n  appId: \"1:363762702221:web:267ce56ee96124d27b8fc4\",\n  measurementId: \"G-K982FE9FLR\"\n};\nvar firebaseApp;\nvar fireAuth;\nif (getApps().length < 1) {\n  firebaseApp = initializeApp(firebaseConfig);\n  fireAuth = initializeAuth(firebaseApp, {\n    persistence: getReactNativePersistence(AsyncStorage)\n  });\n} else {\n  firebaseApp = getApp();\n  fireAuth = getAuth();\n}\nvar useAuth = function useAuth() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentUser = _useState2[0],\n    setCurrentUser = _useState2[1];\n  useEffect(function () {\n    setCurrentUser(fireAuth.currentUser);\n  }, [currentUser]);\n  return currentUser;\n};\nvar setupProfile = function setupProfile(user, name, photoURL) {\n  updateProfile(user, {\n    displayName: name,\n    photoURL: photoURL\n  }).then(function () {\n    return console.log(\"Updated Profile\");\n  }).catch(function (error) {\n    return console.log(\"Failed to update profile\");\n  });\n};\nvar db = getFirestore(firebaseApp);\nvar colRef = collection(db, \"users\");\nexport { fireAuth, db, colRef, useAuth, setupProfile };","map":{"version":3,"names":["initializeApp","getApps","getApp","getAuth","initializeAuth","onAuthStateChanged","updateProfile","getReactNativePersistence","AsyncStorage","getFirestore","collection","getDocs","useEffect","useState","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","fireAuth","length","persistence","useAuth","_useState","_useState2","_slicedToArray","currentUser","setCurrentUser","setupProfile","user","name","photoURL","displayName","then","console","log","catch","error","db","colRef"],"sources":["C:/Users/User/Desktop/Orbital/CardioHardio/firebase.js"],"sourcesContent":["import { initializeApp, getApps, getApp } from 'firebase/app';\r\nimport { getAuth, initializeAuth, onAuthStateChanged, updateProfile } from 'firebase/auth';\r\nimport { getReactNativePersistence } from 'firebase/auth/react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDcVtckd1tAUHiWcIvXIorBN6uOXTWKoDA\",\r\n  authDomain: \"cardiohardio-6dbc7.firebaseapp.com\",\r\n  projectId: \"cardiohardio-6dbc7\",\r\n  storageBucket: \"cardiohardio-6dbc7.appspot.com\",\r\n  messagingSenderId: \"363762702221\",\r\n  appId: \"1:363762702221:web:267ce56ee96124d27b8fc4\",\r\n  measurementId: \"G-K982FE9FLR\",\r\n};\r\n\r\nlet firebaseApp;\r\nlet fireAuth;\r\nif (getApps().length < 1) {\r\n  firebaseApp = initializeApp(firebaseConfig);\r\n  fireAuth = initializeAuth(firebaseApp, {\r\n    persistence: getReactNativePersistence(AsyncStorage),\r\n  });\r\n} else {\r\n  firebaseApp = getApp();\r\n  fireAuth = getAuth();\r\n}\r\n\r\nconst useAuth = () => {\r\n  const [currentUser, setCurrentUser] = useState();\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(fireAuth.currentUser);\r\n  }, [currentUser])\r\n\r\n  return currentUser;\r\n}\r\n\r\nconst setupProfile = (user, name, photoURL) => {\r\n  updateProfile(user,{\r\n    displayName: name,\r\n    photoURL: photoURL\r\n  }).then(() => console.log(\"Updated Profile\")).catch((error) => console.log(\"Failed to update profile\"))\r\n}\r\n\r\nconst db = getFirestore(firebaseApp);\r\n\r\nconst colRef = collection(db, \"users\")\r\n\r\nexport {fireAuth, db, colRef, useAuth, setupProfile};"],"mappings":";AAAA,SAASA,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,cAAc;AAC7D,SAASC,OAAO,EAAEC,cAAc,EAAEC,kBAAkB,EAAEC,aAAa,QAAQ,eAAe;AAC1F,SAASC,yBAAyB,QAAQ,4BAA4B;AACtE,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACtE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAQ3C,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,oCAAoC;EAChDC,SAAS,EAAE,oBAAoB;EAC/BC,aAAa,EAAE,gCAAgC;EAC/CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAIC,WAAW;AACf,IAAIC,QAAQ;AACZ,IAAItB,OAAO,CAAC,CAAC,CAACuB,MAAM,GAAG,CAAC,EAAE;EACxBF,WAAW,GAAGtB,aAAa,CAACc,cAAc,CAAC;EAC3CS,QAAQ,GAAGnB,cAAc,CAACkB,WAAW,EAAE;IACrCG,WAAW,EAAElB,yBAAyB,CAACC,YAAY;EACrD,CAAC,CAAC;AACJ,CAAC,MAAM;EACLc,WAAW,GAAGpB,MAAM,CAAC,CAAC;EACtBqB,QAAQ,GAAGpB,OAAO,CAAC,CAAC;AACtB;AAEA,IAAMuB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAAsCd,QAAQ,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElChB,SAAS,CAAC,YAAM;IACdmB,cAAc,CAACR,QAAQ,CAACO,WAAW,CAAC;EACtC,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,OAAOA,WAAW;AACpB,CAAC;AAED,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAK;EAC7C7B,aAAa,CAAC2B,IAAI,EAAC;IACjBG,WAAW,EAAEF,IAAI;IACjBC,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAACE,IAAI,CAAC;IAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAAA,EAAC,CAACC,KAAK,CAAC,UAACC,KAAK;IAAA,OAAKH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAAA,EAAC;AACzG,CAAC;AAED,IAAMG,EAAE,GAAGjC,YAAY,CAACa,WAAW,CAAC;AAEpC,IAAMqB,MAAM,GAAGjC,UAAU,CAACgC,EAAE,EAAE,OAAO,CAAC;AAEtC,SAAQnB,QAAQ,EAAEmB,EAAE,EAAEC,MAAM,EAAEjB,OAAO,EAAEM,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}