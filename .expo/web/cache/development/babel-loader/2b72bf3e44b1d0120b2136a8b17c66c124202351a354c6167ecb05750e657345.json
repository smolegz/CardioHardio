{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport React, { useState, useEffect } from 'react';\nimport { colRef } from \"../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { userRefid } from \"./LoginScreen\";\nimport { onSnapshot, query, where, collection } from 'firebase/firestore';\nimport Home from \"../components/Home\";\nimport Loading from \"../assets/loading.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data;\nvar HomeScreen = function HomeScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var navigation = useNavigation();\n  var q = query(colRef, where(\"id\", \"==\", userRefid));\n  useEffect(function () {\n    return onSnapshot(q, function (snapshot) {\n      snapshot.docs.forEach(function (doc) {\n        data = doc.data().name;\n        setIsLoading(false);\n      });\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: isLoading ? _jsxs(View, {\n      style: {\n        backgroundColor: \"#FFFFFF\",\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [_jsx(Loading, {\n        width: \"200\",\n        height: \"200\"\n      }), _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#212A3E\"\n      }), _jsx(Text, {\n        style: {\n          fontFamily: 'FiraSans_400Regular_Italic'\n        },\n        children: \"Something is brewin'...\"\n      })]\n    }) : _jsx(Home, {\n      name: data\n    })\n  });\n};\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","colRef","useNavigation","userRefid","onSnapshot","query","where","collection","Home","Loading","jsx","_jsx","jsxs","_jsxs","data","HomeScreen","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","navigation","q","snapshot","docs","forEach","doc","name","View","style","styles","container","children","backgroundColor","justifyContent","alignItems","width","height","ActivityIndicator","size","color","Text","fontFamily","StyleSheet","create","flex"],"sources":["C:/Users/User/Desktop/Orbital/CardioHardio/screens/HomeScreen.js"],"sourcesContent":["import { StyleSheet, Text, View, ActivityIndicator } from 'react-native'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { colRef } from '../firebase'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { userRefid } from './LoginScreen'\r\nimport { onSnapshot, query, where, collection } from 'firebase/firestore'\r\nimport Home from '../components/Home';\r\nimport Loading from '../assets/loading.svg';\r\n\r\nlet data;\r\nconst HomeScreen = () => {\r\n  \r\n  \r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigation = useNavigation();\r\n  let q = query(colRef, where(\"id\", \"==\", userRefid));\r\n\r\n  useEffect(() => onSnapshot(q, (snapshot) => {\r\n    snapshot.docs.forEach((doc) => {\r\n      data = doc.data().name\r\n      setIsLoading(false);\r\n    })\r\n  }),[]);\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      {\r\n        isLoading\r\n        ? <View style={{backgroundColor:\"#FFFFFF\", justifyContent:'center', alignItems:'center'}}>\r\n            <Loading width='200' height='200'/>\r\n            <ActivityIndicator size=\"large\" color=\"#212A3E\"/>\r\n            <Text style={{fontFamily:'FiraSans_400Regular_Italic'}}>Something is brewin'...</Text>\r\n          </View> \r\n        : \r\n        <Home name={data} />\r\n      }\r\n    </View>\r\n  )\r\n\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white'\r\n  },\r\n})"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,MAAM;AACf,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,SAAS;AAClB,SAASC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AACzE,OAAOC,IAAI;AACX,OAAOC,OAAO;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAIC,IAAI;AACR,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAGvB,IAAAC,SAAA,GAAkCjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,UAAU,GAAGnB,aAAa,CAAC,CAAC;EAClC,IAAIoB,CAAC,GAAGjB,KAAK,CAACJ,MAAM,EAAEK,KAAK,CAAC,IAAI,EAAE,IAAI,EAAEH,SAAS,CAAC,CAAC;EAEnDH,SAAS,CAAC;IAAA,OAAMI,UAAU,CAACkB,CAAC,EAAE,UAACC,QAAQ,EAAK;MAC1CA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,UAACC,GAAG,EAAK;QAC7BZ,IAAI,GAAGY,GAAG,CAACZ,IAAI,CAAC,CAAC,CAACa,IAAI;QACtBP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;EAAA,GAAC,EAAE,CAAC;EAEN,OACET,IAAA,CAACiB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAE1Bb,SAAS,GACPN,KAAA,CAACe,IAAI;MAACC,KAAK,EAAE;QAACI,eAAe,EAAC,SAAS;QAAEC,cAAc,EAAC,QAAQ;QAAEC,UAAU,EAAC;MAAQ,CAAE;MAAAH,QAAA,GACrFrB,IAAA,CAACF,OAAO;QAAC2B,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC;MAAK,CAAC,CAAC,EACnC1B,IAAA,CAAC2B,iBAAiB;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAC;MAAS,CAAC,CAAC,EACjD7B,IAAA,CAAC8B,IAAI;QAACZ,KAAK,EAAE;UAACa,UAAU,EAAC;QAA4B,CAAE;QAAAV,QAAA,EAAC;MAAuB,CAAM,CAAC;IAAA,CAClF,CAAC,GAETrB,IAAA,CAACH,IAAI;MAACmB,IAAI,EAAEb;IAAK,CAAE;EAAC,CAElB,CAAC;AAGX,CAAC;AAED,eAAeC,UAAU;AAEzB,IAAMe,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPX,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBF,eAAe,EAAE;EACnB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}